[project]
name = "epic-awesome-gamer"
version = "0.4.0"
dependencies = [
    "hcaptcha-challenger>=0.15.3",
    "pydantic-settings>=2.8.1",
]
requires-python = ">=3.12"
authors = [
    { name = "QIN2DIM", email = "yaoqinse@gmail.com" }
]
description = "🍷 Gracefully claim weekly free games and monthly content from Epic Store."
readme = "README.md"
license = "GPL-3.0-or-later"
keywords = ["epic", "epic-awesome-gamer", "epic-games-store"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Software Development",
]

[project.urls]
Homepage = "https://github.com/QIN2DIM/epic-awesome-gamer"
Documentation = "https://github.com/QIN2DIM/epic-awesome-gamer"
Repository = "https://github.com/QIN2DIM/epic-awesome-gamer.git"
Issues = "https://github.com/QIN2DIM/epic-awesome-gamer/issues"
Changelog = "https://github.com/QIN2DIM/epic-awesome-gamer/blob/master/CHANGELOG.md"

[project.scripts]
epic = "epic_awesome_gamer.cli.main:main"


# https://packaging.python.org/en/latest/key_projects/#hatch
# https://hatch.pypa.io/latest/config/build/#build-system
[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/build/#explicit-selection
[tool.hatch.build.targets.sdist]
only-include = ["src/epic_awesome_gamer"]
exclude = [
    'tests/',
    'docker/',
    'examples/'
]

# https://hatch.pypa.io/latest/config/build/#packages
[tool.hatch.build.targets.wheel]
packages = ["src/epic_awesome_gamer"]

[tool.pytest.ini_options]
testpaths = ["tests", "examples"]
asyncio_mode = "auto"
filterwarnings = "ignore::DeprecationWarning"

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
skip-string-normalization = true

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = true

[dependency-groups]
dev = [
    "pytest>=8.3.5",
]